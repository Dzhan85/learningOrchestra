version: '3'

services:
    database_api:
        build: ./database_api_service
        image: 127.0.0.1:5050/database_api:database_api
        ports:
            - "5000:5000"
        depends_on:
            - database_1
            - images
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database
        environment:
            - DATABASE_URL=database_1
            - DATABASE_PORT=27017 

    database_1:
        build: ./database_service
        image: 127.0.0.1:5050/database:database
        command: mongod --replSet "replica_set"
        ports:
            - "27017:27017"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database

    database_2:
        image: mongo:4
        ports:
            - "27018:27017"
        command: mongod --replSet "replica_set"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database

    database_3:
        image: mongo:4
        ports:
            - "27019:27017"
        command: mongod --replSet "replica_set"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==worker"
        networks:
            - database

    images:
        image: registry:2
        ports:
            - "5050:5000"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                    - "node.role==manager"

        networks:
            - database
        volumes:
            - images:/var/lib/registry

    visualizer:
        image: dockersamples/visualizer
        volumes:
        - "/var/run/docker.sock:/var/run/docker.sock"
        ports:
        - "8080:8080"
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
            placement:
                constraints:
                  - "node.role==manager"

networks:
    database:

volumes:
    images:
